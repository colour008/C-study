{
	"version": "2.0.0",
	"type": "process", // process是把预定义变量和转义解析后直接全部传给command；shell相当于先打开shell再输入命令，所以args还会经过shell再解析一遍
	"label": "g++", // 任务名称，与launch.json的preLaunchTask相对应
	"command": "g++", // 要使用的编译器，C++用g++
	"args": [
		"-fexec-charset=gbk", // 生成的程序使用GBK编码，不加这条会导致Win下输出中文乱码；繁体系统改成BIG5
		"-D__USE_MINGW_ANSI_STDIO=1",
		"${file}",
		"-g", // 生成和调试有关的信息
		"-m64", // 不知为何有时会生成16位应用而无法运行，加上此条可强制生成64位的
		"-Wall", // 开启额外警告
		"-static-libgcc", // 静态链接libgcc，一般都会加上
		"-o", // 指定输出文件名，不加该参数则默认输出a.exe，Linux下默认a.out
		"${workspaceFolder}/exe/${fileBasenameNoExtension}.exe",//编译输出exe文件到exe文件夹
		// "${fileDirname}\\${fileBasenameNoExtension}.exe",
		"-fdiagnostics-color=always"
	],
	"problemMatcher": {
		"owner": "cpp",
		"fileLocation": ["relative", "\\"],
		"pattern": {
			"regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
			"file": 1,
			"line": 2,
			"column": 3,
			"severity": 4,
			"message": 5
		}
	},
	"group": {
		"kind": "build",
		"isDefault": true // 不为true时ctrl shift B就要手动选择了
	},
	"options": {
		"cwd": "C:/MinGW/bin"
	},
	"presentation": {
		"echo": true,
		"reveal": "always", // 执行任务时是否跳转到终端面板，可以为always，silent，never。具体参见VSC的文档
		"focus": false, // 设为true后可以使执行task时焦点聚集在终端，但对编译C/C++来说，设为true没有意义
		"panel": "shared" // 不同的文件的编译信息共享一个终端面板
	},
	"detail": "编译器: C:/MinGW/bin/g++.exe"
}
